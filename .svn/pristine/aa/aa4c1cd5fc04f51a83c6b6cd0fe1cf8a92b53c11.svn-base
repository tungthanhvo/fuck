define(['./module', 'config'], function (controllers, config) {
    'use strict';
    controllers.controller("ModalProjectAddMemberInstanceCtrl", ['$rootScope', '$scope', '$http', '$uibModalInstance', 'toastr', '$log', 'projectMemberService', '$location', 'projectService', 'startdate', function ($rootScope, $scope, $http, $uibModalInstance, toastr, $log, projectMemberService, $location, projectService, startdate) {
        var self = this;

        self.start_date = startdate.start_date;
        self.end_date = startdate.end_date;

        var url = $location.path();
        var project_id = url.split('/')[2];

        self.member = {
            name: '',
            dt: '',
            releasedate: '',
            roletitle: '',
            description: ''
        }


        projectService.getProjectMembers(project_id).success(function (data) {
            self.fn = data;
        });

        projectService.getProjectRoles(project_id).success(function (data) {
            self.role = data;
        });

        self.checkDate = true;
        self.companyJoinDate = '';
        self.check2Date = true;
        self.checkJoinDateWithProjectStartDate = true;
        self.checkReleaseDateWithEndDate = true;
        self.checkJoinDate = function () {
            self.check2Date = true;
            self.checkDate = true;
            self.checkReleaseDateWithEndDate = true;
            self.checkJoinDateWithProjectStartDate = true;

            if (!(self.member.dt == null || self.member.dt == '') && !(self.member.name == null || self.member.name == '')) {
                for (var i = 0; i < self.fn.userArray.length; i++) {
                    if (self.fn.userArray[i].id.toString() === self.member.name) {
                        self.companyJoinDate = new Date(self.fn.userArray[i].company_join_date);
                        self.companyJoinDate.setHours(0, 0, 0, 0);
                        break;
                    }
                }
                if (self.member.dt.getTime() - self.companyJoinDate.getTime() < 0) {
                    self.checkDate = false;
                    $scope.addMemberProject.$setValidity('joindate', false);
                    return;
                }
                else {
                    self.checkDate = true;
                    $scope.addMemberProject.$setValidity('joindate', true);
                }

                var temp = new Date(self.start_date);
                temp.setHours(0, 0, 0, 0);
                //console.log(startdate.getTime());
                if (self.member.dt.getTime() - temp < 0) {
                    self.checkJoinDateWithProjectStartDate = false;
                    $scope.addMemberProject.$setValidity('joindate', false);
                    return;
                }
                else {
                    self.checkJoinDateWithProjectStartDate = true;
                    $scope.addMemberProject.$setValidity('joindate', true);
                }

                //self.check2Date = true;
                if (!Boolean(self.member.releasedate)) {
                    return;
                }
                if (self.member.releasedate.getTime() - self.member.dt.getTime() < 0) {
                    self.check2Date = false;
                    $scope.addMemberProject.$setValidity('releasedate', false);
                } else {
                    self.check2Date = true;
                    $scope.addMemberProject.$setValidity('releasedate', true);
                }

            }
            if (!(self.member.releasedate == null || self.member.releasedate == '')) {
                if (self.end_date == null || self.end_date == '') {
                    return;
                }
                else {
                    var temp = new Date(self.end_date);
                    temp.setHours(0, 0, 0, 0);
                    if (temp.getTime() - self.member.releasedate.getTime() < 0) {
                        self.checkReleaseDateWithEndDate = false;
                        $scope.addMemberProject.$setValidity('releasedate', false);
                    }
                    else {
                        self.checkReleaseDateWithEndDate = true;
                        $scope.addMemberProject.$setValidity('releasedate', true);
                    }
                }
            }
        }

        self.checkJoinWithRelease = function () {

        }


        // self.validateDate = function () {
        //     self.checkJoinWithRelease();
        //     self.checkJoinDate();
        // }
        self.add = function () {
            if ($scope.addMemberProject.$valid) {
                projectMemberService.addProjectMember(project_id, self.member).success(function (data2) {
                    toastr.success(data2.message, 'TMS');
                    projectMemberService.getAllMemberInProject(project_id).success(function (data) {
                        $uibModalInstance.close(data);
                    });
                });
            }
            else {
                angular.forEach($scope.addMemberProject.$error.required, function (field) {
                    field.$setDirty();
                });
            }
        };

        self.cancel = function () {
            $uibModalInstance.dismiss('cancel');
        };

        self.today = function (name) {
            if (name === 'joindate') {
                //var current_year = new Date().getFullYear();
                //self.user.dt = new Date(current_year - 18, 0, 1);
            } else {

            }
        };
        self.today('joindate');
        self.today('releasedate');

        self.clear = function () {
            self.dt = null;
        };

        self.inlineOptions = {
            customClass: getDayClass,
            minDate: new Date(1950, 0, 1),
            showWeeks: false
        };

        var tday = new Date();
        self.dateOptions1 = {
            formatYear: 'yy',
            maxDate: new Date(tday.getFullYear() + 20, 11, 31),
            minDate: new Date(),
            startingDay: 1
        };

        self.dateOptions2 = {
            formatYear: 'yy',
            maxDate: new Date(tday.getFullYear() + 20, 11, 31),
            minDate: new Date(),
            startingDay: 1
        };

        // Disable weekend selection
        function disabled(data) {
            var date = data.date,
                mode = data.mode;
            return mode === 'day' && (date.getDay() === 0 || date.getDay() === 6);
        }

        self.toggleMin = function () {
            self.dateOptions1.minDate = self.inlineOptions.minDate;
            self.dateOptions2.minDate = self.inlineOptions.minDate;
        };

        self.toggleMin();

        self.open1 = function () {
            self.popup1.opened = true;
        };

        self.open2 = function () {
            self.popup2.opened = true;
        };

        self.setDate = function (year, month, day) {
            self.dt = new Date(year, month, day);
        };

        self.formats = ['dd-MMMM-yyyy', 'yyyy/MM/dd', 'dd.MM.yyyy', 'shortDate'];
        self.format = self.formats[0];
        self.altInputFormats = ['M!/d!/yyyy'];

        self.popup1 = {
            opened: false
        };

        self.popup2 = {
            opened: false
        };

        var tomorrow = new Date();
        tomorrow.setDate(tomorrow.getDate() + 1);
        var afterTomorrow = new Date();
        afterTomorrow.setDate(tomorrow.getDate() + 1);
        self.events = [
            {
                date: tomorrow,
                status: 'full'
            },
            {
                date: afterTomorrow,
                status: 'partially'
            }
        ];

        function getDayClass(data) {
            var date = data.date,
                mode = data.mode;
            if (mode === 'day') {
                var dayToCheck = new Date(date).setHours(0, 0, 0, 0);

                for (var i = 0; i < self.events.length; i++) {
                    var currentDay = new Date(self.events[i].date).setHours(0, 0, 0, 0);

                    if (dayToCheck === currentDay) {
                        return self.events[i].status;
                    }
                }
            }

            return '';
        }
    }]);
});